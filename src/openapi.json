{
    "openapi": "3.1.0",
    "info": {
      "title": "Account Management API",
      "version": "1.0.0",
      "description": "API simples construída como case técnico para a vaga de engenheiro backend."
    },
    "paths": {
      "/api/v1/accounts": {
        "post": {
          "tags": [
            "Account"
          ],
          "summary": "Create an account",
          "operationId": "create_an_account_api_v1_accounts_post",
          "requestBody": {
            "description": "Account information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Account created successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              }
            },
            "409": {
              "description": "Account already exists",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPAccountAlreadyExistsError"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/accounts/transfer": {
        "post": {
          "tags": [
            "Account"
          ],
          "summary": "Make a peer-to-peer transfer",
          "operationId": "make_a_peer_to_peer_transfer_api_v1_accounts_transfer_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transfer"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Transfer made successfully",
              "content": {
                "application/json": {
                  "schema": {}
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            },
            "409": {
              "description": "Conflict data",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPInsufficientBalanceError"
                  }
                }
              }
            },
          }
        }
      },
      "/api/v1/accounts/{account_number}/deposit": {
        "post": {
          "tags": [
            "Account"
          ],
          "summary": "Deposit into an account",
          "operationId": "deposit_into_an_account_api_v1_accounts__account_number__deposit_post",
          "parameters": [
            {
              "name": "account_number",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Account Number"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deposit"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Deposit made successfully",
              "content": {
                "application/json": {
                  "schema": {}
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            },
            "404": {
              "description": "Account not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPAccountNotFoundError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/accounts/{account_number}/balance": {
        "get": {
          "tags": [
            "Account"
          ],
          "summary": "Get account balance",
          "operationId": "get_account_balance_api_v1_accounts__account_number__balance_get",
          "parameters": [
            {
              "name": "account_number",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Account Number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Balance"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            },
            "404": {
              "description": "Account not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPAccountNotFoundError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "Account": {
          "properties": {
            "account_number": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Account number",
              "description": "Unique account number",
              "example": "1225-6"
            }
          },
          "type": "object",
          "title": "Account"
        },
        "Balance": {
          "properties": {
            "current_balance": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Current Balance"
            }
          },
          "type": "object",
          "title": "Balance"
        },
        "Deposit": {
          "properties": {
            "amount": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Amount"
            }
          },
          "type": "object",
          "title": "Deposit"
        },
        "Transfer": {
          "properties": {
            "amount": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Amount"
            },
            "from": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From"
            },
            "to": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "To"
            }
          },
          "type": "object",
          "title": "Transfer"
        },
        "HTTPError": {
          "type": "object",
          "title": "Logical error",
          "properties": {
            "detail": {
              "type": "string",
              "example": "Account 123456 not found"
            }
          },
          "required": ["detail"]
        },
        "HTTPAccountAlreadyExistsError": {
          "type": "object",
          "title": "AccountAlreadyExistsError",
          "properties": {
            "detail": {
              "type": "string",
              "example": "Account already exists"
            }
          },
          "required": ["detail"]
        },
        "HTTPSameAccountsTransferError": {
          "type": "object",
          "title": "SameAccountsTransferError",
          "properties": {
            "detail": {
              "type": "string",
              "example": "Transfer to the same account is not allowed. Please select a different destination account."
            }
          },
          "required": ["detail"]
        },
        "HTTPInsufficientBalanceError": {
          "type": "object",
          "title": "InsufficientBalanceError",
          "properties": {
            "detail": {
              "type": "string",
              "example": "Insufficient balance"
            }
          },
          "required": ["detail"]
        },
        "HTTPValidationError": {
          "properties": {
            "detail": {
              "items": {
                "$ref": "#/components/schemas/ValidationError"
              },
              "type": "array",
              "title": "Detail"
            }
          },
          "type": "object",
          "title": "HTTPValidationError"
        },  
        "ValidationError": {
          "properties": {
            "loc": {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  }
                ]
              },
              "type": "array",
              "title": "Location"
            },
            "msg": {
              "type": "string",
              "title": "Message"
            },
            "type": {
              "type": "string",
              "title": "Error Type"
            }
          },
          "type": "object",
          "required": [
            "loc",
            "msg",
            "type"
          ],
          "title": "ValidationError"
        }
      }
    }
  }